---

- name: Add manifest files
  ansible.builtin.include_role:
    name: rke2_common
    tasks_from: add-manifest-addons.yml
  when:
    - manifest_config_file_path is defined
    - manifest_config_file_path | length > 0

- name: Start rke2-server
  ansible.builtin.systemd:
    name: rke2-server
    state: started
    enabled: yes

- name: Wait for k8s apiserver
  ansible.builtin.wait_for:
    host: localhost
    port: "6443"
    state: present
    timeout: 300

- name: Wait for kubelet process to be present on host
  ansible.builtin.command: >-
    ps -C kubelet -F -ww --no-headers
  register: kubelet_check
  until: kubelet_check.rc == 0
  retries: 20
  delay: 10
  changed_when: false

- name: Extract the hostname-override parameter from the kubelet process
  ansible.builtin.set_fact:
    kubelet_hostname_override_parameter: "{{ kubelet_check.stdout | \
      regex_search('\\s--hostname-override=((([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9]))\\s',\
      '\\1') }}"

# BEGIN CONFIGURING GITOPS CILIUM DEPLOYMENT
- name: Create temporary working directory
  delegate_to: localhost
  vars:
    ansible_become: false
  ansible.builtin.tempfile:
    state: directory
  register: working_dir

- name: Git clone chart repo
  delegate_to: localhost
  vars:
    ansible_become: false
  ansible.builtin.git:
    repo: https://github.com/jsnouffer/homelab.git
    dest: "{{ working_dir.path }}/repo"

- name: Copy kubeconfig from control-plane node
  delegate_to: localhost
  vars:
    ansible_become: false
  shell: ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no cloud-user@{{ kubernetes_api_server_host }} "sudo cat /etc/rancher/rke2/rke2.yaml" > {{ working_dir.path }}/kubeconfig

- name: Update API URL in kubeconfig
  delegate_to: localhost
  vars:
    ansible_become: false
  shell: sed -i 's/127.0.0.1/{{ kubernetes_api_server_host }}/g' {{ working_dir.path }}/kubeconfig

- name: Deploy cilium chart
  delegate_to: localhost
  ignore_errors: True
  vars:
    ansible_become: false
  kubernetes.core.helm:
    kubeconfig: "{{ working_dir.path }}/kubeconfig"
    name: cilium
    chart_ref: "{{ working_dir.path }}/repo/kubernetes-deployments/core/cilium"
    release_namespace: cilium
    dependency_update: true
    create_namespace: true
    wait: true
    values:
      cilium:
        initialInstall: true
    values_files:
      - "{{ working_dir.path }}/repo/kubernetes-deployments/core/cilium/{{ default_helm_values_file }}"
# END CONFIGURING GITOPS CILIUM DEPLOYMENT

- name: Wait for node to show Ready status
  ansible.builtin.command: >-
    /var/lib/rancher/rke2/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml
    --server https://127.0.0.1:6443 get no {{ kubelet_hostname_override_parameter[0] }}
    -o jsonpath='{.status.conditions[?(@.type=="Ready")].status}'
  register: status_result
  until: status_result.stdout.find("True") != -1
  retries: 20
  delay: 10
  changed_when: false

- name: Add generated Token if none provided
  block:
    - name: Wait for node-token
      ansible.builtin.wait_for:
        path: /var/lib/rancher/rke2/server/node-token

    - name: Read node-token from master
      ansible.builtin.slurp:
        src: /var/lib/rancher/rke2/server/node-token
      register: node_token

    - name: Store Master node-token
      ansible.builtin.set_fact:
        rke2_config_token: "{{ node_token.content | b64decode | regex_replace('\n', '') }}"
